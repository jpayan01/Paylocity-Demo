Environment URL:  https://wmxrwq14uc.execute-api.us-east-1.amazonaws.com/Prod/api/employees

Bug Title: POST Request Allows Creation of Employee Without Basic Authentication Token

Description:
When performing a POST request to the endpoind, a new employee is successfully created even if the required
Basic Authentication token is not provided. The system should enforce the presence of the authentication token,
but it currently allows unauthorized requests to pass through, which poses a significant security risk.

Steps to Reproduce:
1. Send a POST request to the following endpoint:
URL: https://wmxrwq14uc.execute-api.us-east-1.amazonaws.com/Prod/api/employees
2. Set the Content-Type to application/json.
3. Use the following body payload for the request:
    {
        "firstName": "Tim",
        "lastName": "Drake",
        "dependants": 1
    }
4. Do not include the required Basic Authentication token in the request header.
5. Send the POST request.

Expected Result:
The server should return an error response (e.g., HTTP 401 Unauthorized) due to the missing authentication token,
preventing the creation of a new employee.

Actual Result:
The POST request is successfully processed, and a new employee is created despite the absence of the required
Basic Authentication token.
The server returns a successful 200 status code response with the newly created employee's details.

Impact:
This issue allows unauthorized users to create new employees, posing a significant security risk.
Unauthorized access to the API should not be permitted, and sensitive endpoints like employee creation should
enforce strict authentication mechanisms.


********************

Bug Title: Incorrect Status Code Returned for Deleted User on GET Request

Description:
The API endpoint responsible for deleting an employee successfully 
returns a 200 OK status code. However, when performing a subsequent GET request 
to validate the user no longer exists, the server incorrectly returns a 200 OK status code 
instead of the expected 404 Not Found status code.

Steps to Reproduce:
Send a DELETE request to the following API endpoint to delete an existing user:

URL: https://wmxrwq14uc.execute-api.us-east-1.amazonaws.com/Prod/api/employees/{userID}
Method: DELETE
Example userID: 1945d706-39f3-49eb-bea8-98abcf766e5e
Confirm that the deletion request is successful, returning a 200 OK status code.

Send a GET request to verify that the deleted user no longer exists:

URL: https://wmxrwq14uc.execute-api.us-east-1.amazonaws.com/Prod/api/employees/{userID}
Method: GET
Example userID: 1945d706-39f3-49eb-bea8-98abcf766e5e

Expected Result:
The server should return a 404 Not Found status code, indicating that the user has been deleted 
and no longer exists in the database.

Actual Result:
The server returns a 200 OK status code, incorrectly indicating that the user still exists, 
even though the user has been deleted.

Impact:
This issue creates confusion during automated API testing and manual validation, as it falsely 
confirms the presence of a deleted resource. It also violates standard REST API conventions, 
where a 404 response is expected when attempting to retrieve a non-existent resource.
Ensure proper handling of deleted resources and fix the incorrect status code to align with REST API best practices.

Environment:
API URL: https://wmxrwq14uc.execute-api.us-east-1.amazonaws.com/Prod/api/employees
Method: DELETE / GET
UserID Example: 1945d706-39f3-49eb-bea8-98abcf766e5e

